{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"in",
				"in_file"
			],
			[
				"word_",
				"word_count"
			],
			[
				"char",
				"char_positions"
			],
			[
				"ch",
				"char_to_find"
			],
			[
				"num_",
				"num_chars"
			],
			[
				"for",
				"for_each"
			],
			[
				"set",
				"setw\t(main.cpp)"
			],
			[
				"airCharge",
				"airChargeFrames"
			],
			[
				"current",
				"currentTime\t(PlayerController.cs)"
			],
			[
				"ssAirCh",
				"ssAirChargeSlam.update"
			],
			[
				"Register",
				"RegisterHitHandler\t(AttackLibrary.cs)"
			],
			[
				"Enem",
				"ENEMY_HIT"
			],
			[
				"Input",
				"InputForgiver\t(PlayerController.cs)"
			],
			[
				"CreateJUmp",
				"CreateJumpForgiveState"
			],
			[
				"entry",
				"entryState"
			],
			[
				"Transition",
				"TransitionAway"
			],
			[
				"previous",
				"previousState"
			],
			[
				"origin",
				"originalPos"
			],
			[
				"drainDel",
				"drainDelayFrames"
			],
			[
				"JUMP",
				"JUMP_FORGIVE"
			],
			[
				"RAGE",
				"RAGE_CHANNEL"
			],
			[
				"channel",
				"channelMark"
			],
			[
				"chann",
				"channelMark"
			],
			[
				"target",
				"targetPercent"
			],
			[
				"FULL",
				"FULL_RAGE_CHANNEL"
			],
			[
				"Start",
				"StartChannel\t(PlayerHealth.cs)"
			],
			[
				"health",
				"healthCache"
			],
			[
				"heal",
				"healthPerSec"
			],
			[
				"percent",
				"percentDifference"
			],
			[
				"rageC",
				"rageChannelPercentage"
			],
			[
				"ragec",
				"rageChannelPercentage"
			],
			[
				"GetPer",
				"GetCurrentPercentage"
			],
			[
				"GetP",
				"GetCurrentPercentage\t(PlayerHealth.cs)"
			],
			[
				"true",
				"trueVelocity.x\t(Controller2D.cs)"
			],
			[
				"max",
				"maxAerialJumps"
			],
			[
				"WALL",
				"WALL_SLAM"
			],
			[
				"WALL_",
				"WALL_SLAM"
			],
			[
				"GROUND",
				"GROUND_CHARGE"
			],
			[
				"state",
				"stateSystem"
			],
			[
				"facing",
				"facing_right"
			],
			[
				"airChar",
				"airChargeImpulse"
			],
			[
				"Seriali",
				"SerializeField"
			],
			[
				"Can",
				"CancelAttack"
			],
			[
				"aerial",
				"aerialJumps"
			],
			[
				"charge",
				"chargeAttackInput"
			],
			[
				"chargeCool",
				"chargeCooldown"
			],
			[
				"chargeCooldown",
				"chargeCooldownFrames"
			],
			[
				"maxAerial",
				"maxAerialCharges"
			],
			[
				"maxAeri",
				"maxAerialCharge"
			],
			[
				"JUMP_",
				"JUMP_FORGIVE"
			],
			[
				"GROUN",
				"GROUND_CHARGE"
			],
			[
				"lightAttack",
				"lightAttackImpulse"
			],
			[
				"Seria",
				"SerializeField"
			],
			[
				"SetVe",
				"SetVelocityX\t(PlayerMovement.cs)"
			],
			[
				"Vecto",
				"Vector2"
			],
			[
				"HIT_STUN",
				"HIT_STUNNED"
			],
			[
				"Hit",
				"HIT_STUN"
			],
			[
				"PlayerLight",
				"PlayerLightAttackA\t(PlayerController.cs)"
			],
			[
				"heavyAtta",
				"heavyAttackInput"
			],
			[
				"Triggers",
				"Triggers.JUMP_ACTION"
			],
			[
				"Getbutton",
				"GetButtonDown"
			],
			[
				"HEAVY",
				"HEAVY_ATTACK"
			],
			[
				"Heavy",
				"HEAVY_ATTACK"
			],
			[
				"curre",
				"currentAttack"
			],
			[
				"Debug",
				"Debug.Log"
			],
			[
				"lightAttac",
				"lightAttackAFrames_A"
			],
			[
				"LIGHT",
				"LIGHT_ATTACK"
			],
			[
				"Ad",
				"AddTransitionAll\t(FiniteStateMachine.cs)"
			],
			[
				"DJ_WALK",
				"DJ_WALK_MONSTER"
			],
			[
				"ssjump",
				"ssJumpForgive"
			],
			[
				"TIME",
				"TimerStateInfo"
			],
			[
				"FOR",
				"FORCE_EXIT"
			],
			[
				"AttackRe",
				"AttackReceiver"
			],
			[
				"Rec",
				"ReceiveHandler\t(AttackReceiver.cs)"
			],
			[
				"damage",
				"damageFrames"
			],
			[
				"ATTACK",
				"Attack"
			],
			[
				"ssAtta",
				"ssAttackLeap"
			],
			[
				"ssAerial",
				"ssAerialJumpSquat"
			],
			[
				"jumpSq",
				"jumpSquatFrames"
			],
			[
				"curren",
				"currentTime"
			],
			[
				"drawWid",
				"drawWidthBox"
			],
			[
				"enemy",
				"enemyListOffset"
			],
			[
				"Editor",
				"EditorGUILayout"
			],
			[
				"drawHeight",
				"drawHeightBox2"
			],
			[
				"yDrawPo",
				"yDrawPositionBox2"
			],
			[
				"draw",
				"drawWidthBox"
			],
			[
				"currentW",
				"currentWaveTime"
			],
			[
				"currentWve",
				"currentWaveName"
			],
			[
				"currenT",
				"currentTime\t(LevelInfo.cs)"
			],
			[
				"currentWa",
				"currentWaveName"
			],
			[
				"background",
				"background_gray"
			],
			[
				"wave",
				"waveSelection"
			],
			[
				"FindP",
				"FindPropertyRelative"
			],
			[
				"DrawW",
				"DrawWaveValuePanel"
			],
			[
				"LevelIn",
				"LevelInfoWindow\t(LevelInfoWindow.cs)"
			],
			[
				"basic",
				"basicAttackName"
			],
			[
				"HVP",
				"HVPLowerXBound"
			],
			[
				"yDraw",
				"yDrawPositionBox"
			],
			[
				"DrawHitbox",
				"DrawHitboxInfoPanel"
			],
			[
				"yDrawPO",
				"yDrawPositionPanel"
			],
			[
				"drawHeigh",
				"drawHeightBox"
			],
			[
				"Butt",
				"ButtonAreaHeight"
			],
			[
				"Label",
				"LabelAreaHeight"
			],
			[
				"DrawAttack",
				"DrawAttackListPanel"
			],
			[
				"rawD",
				"rawDrawHeight"
			],
			[
				"Vertica",
				"VerticalBoarder"
			],
			[
				"Horizon",
				"HorizontalBoarder"
			],
			[
				"AVP",
				"AVPUpperXBound"
			],
			[
				"Disp",
				"DispatchHandler"
			],
			[
				"attack",
				"attackLibrary"
			],
			[
				"player",
				"playerHealth"
			],
			[
				"play",
				"playerHealth"
			],
			[
				"Player",
				"PlayerHealth"
			],
			[
				"drainS",
				"drainScalar"
			],
			[
				"Sys",
				"System.Collections.Generic\t(AttackReceiver.cs)"
			],
			[
				"Attack",
				"AttackReceiver_Handler"
			],
			[
				"AttaK",
				"AttackReceiver"
			],
			[
				"Atack",
				"AttackReceiver"
			],
			[
				"knock",
				"knockback_multiplier"
			],
			[
				"_tru",
				"_true_velocity"
			],
			[
				"type",
				"typeof\t(HealthComponent.cs)"
			],
			[
				"colli",
				"collision\t(AttackController.cs)"
			],
			[
				"Vect",
				"Vector3\t(PlayerController.cs)"
			],
			[
				"Attac",
				"AttackReceiver"
			],
			[
				"Atta",
				"AttackReceiverHandler"
			],
			[
				"Time",
				"Time.deltaTime"
			],
			[
				"cure",
				"currentTime"
			],
			[
				"act",
				"action"
			]
		]
	},
	"buffers":
	[
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 288,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "text",
		"selected_items":
		[
			[
				"text",
				"Text Pastry: From 1 To X"
			],
			[
				"te",
				"Text Pastry: From 0 To X"
			],
			[
				"tex",
				"Text Pastry: From 1 To X"
			],
			[
				"text pastry",
				"Text Pastry: From 1 To X"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			]
		],
		"width": 398.0
	},
	"console":
	{
		"height": 446.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Programming/CS121",
		"/D/Programming/CS121/Homework2",
		"/D/Programming/CS121/Homework2/Program1",
		"/D/Programming/CS121/Homework2/Program1/src"
	],
	"file_history":
	[
		"/C/Users/Clark/CMakeBuilds/4491a546-164a-963b-82e2-285b377ffc38/build/x86-Debug/UAH_sample.txt",
		"/D/Programming/CS121/Homework2/Program4/src/main.cpp",
		"/C/Users/Clark/CMakeBuilds/4491a546-164a-963b-82e2-285b377ffc38/build/x86-Debug/UAH_next.txt",
		"/D/Programming/CS121/Homework2/Program4/exp/UAH_sample.txt",
		"/D/Programming/CS121/Homework2/Program3/src/main.cpp",
		"/D/Programming/CS121/Homework2/Program4/CMakeLists.txt",
		"/D/Programming/CS121/Homework2/Program2/src/main.cpp",
		"/D/Programming/CS121/Homework2/Program2/CMakeLists.txt",
		"/D/Programming/CS121/Homework2/Program1/CMakeLists.txt",
		"/D/Programming/CS121/cs121.sublime-project",
		"/D/Programming/CS121/Homework2/Program1/src/main.cpp",
		"/D/Programming/CS121/Homework2/Program3/CMakeLists.txt",
		"/C/Users/Clark/CMakeBuilds/840d78ca-f532-0e38-9c55-110e0ad95906/build/x86-Debug/book_database.txt",
		"/C/Users/Clark/CMakeBuilds/cc5bdfaa-ca5f-373f-8cc3-4e39554fe9bf/build/x86-Debug/temp_table.txt",
		"/C/Users/Clark/CMakeBuilds/cc5bdfaa-ca5f-373f-8cc3-4e39554fe9bf/build/x86-Debug/temps.txt",
		"/D/Programming/CS121/ProjectSkeleton/CMakeLists.txt",
		"/D/Programming/CS121/Homework2/Program1/temps.txt",
		"/D/Programming/Projects/clarksouls/CMakeLists.txt",
		"/D/Programming/Projects/clarksouls_old/CMakeLists.txt",
		"/D/Programming/CS121/Homework2/Program1/.vs/ProjectSettings.json",
		"/D/Dropbox/School/Fall2017/CS121/ProjectSkeleton/src/main.cpp",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player/PlayerController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player/PlayerController_AttackStates.cs",
		"/C/Users/Clark/AppData/Local/Temp/7zO40D0CC8D/Concepts.txt",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/InputForgiver.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/EditorHelper.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player/PlayerController_MoveStates.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/Drawers/InputForgiver_Drawer.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/Editors/EnemyMovement_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/Editors/Controller2D_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/Editors/PlayerMovement_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/NodeEditor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player/PlayerController_AirStates.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player/PlayerMovementStates.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/StateMachines/FiniteStateMachine.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player/PlayerMovement.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player/PlayerHealth.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/PlatformEditController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Core/Controller2D.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/Player",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/AIController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Core/ScreenShake.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Standard Assets/2D/Scripts/Camera2DFollow.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/GameController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/GUI/HealthBarController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/PlayerMovement.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Attack Library/AttackStructures.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/AttackLibraryWindow.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/ReceivesKnockback.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Attack Library/AttackReceiver.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/PlayerController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/PlayerHealth.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/EnemyMovement.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/PlayerWallChecker.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/I_am_a_box.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Sprites/Player_Test/Animations/PlayerGroundCharge.anim",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/StateMachines/IState.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/AttackLibrary_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/LevelInfo.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/StateMachines/State.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/HealthComponent.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/LevelInfoWindow.cs",
		"/D/Programming/Projects/mini_clarkway/mini_clungeons.sublime-project",
		"/D/Programming/Projects/mini_clarkway/Assets/Scenes/playerAttackDev.unity",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Old/PlayerAttack.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/EmptyStruct.cs",
		"/C/Users/Clark/AppData/Local/Temp/7zO0D38F7E3/view-source_https___144.121.8.214_ConfigClient.html",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/StateMachines/SimpleStateMachine.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/LevelInfo_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/PlayerMovement_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/PlayerDeath.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/AnimationAutoDestroy.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Attack Library/AttackLibrary.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/DontDestroyOnLoad.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Attack Library/AttackController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/GUI/BasicImageScalar.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Core/RaycastController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Game/DeathComponent.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/DrawLineBetweenChildren.cs",
		"/D/Programming/Projects/Unity/CS347Proj1/Assets/Scripts/BasicImageScalar.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/BasicImageScalar.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Old/MovingPlatformController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Rewired/Extras/TouchControls/Shaders/ColorShift.shader",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/ScrubMovement.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/HealthComponent.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Controller2D.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/PlayerDeath.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/PlayerController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/TEST/test_spewer.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/AttackCaster_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Core/SerDictionary.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Util/DrawGizmoSphereOn.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/Controller2D_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/GameObjectEditorWindow.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/AttackCaster.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/ColliderDrawer.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Rewired/Internal/Libraries/Runtime/Rewired_Core.XML",
		"/D/Programming/Projects/mini_clarkway/Assets/Editor/TestWindow_Editor.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/Sprites/EditorTestSer.cs",
		"/D/Programming/Projects/mini_clarkway/.gitignore",
		"/D/Programming/Projects/mini_clarkway/ProjectSettings/ProjectVersion.txt",
		"/D/Programming/Projects/mini_clarkway/PlayerMovement.cs",
		"/D/Programming/Projects/mini_clarkway/PlayerController.cs",
		"/D/Programming/Projects/mini_clarkway/StateMachines/State.cs",
		"/D/Programming/Projects/mini_clarkway/StateMachines/FiniteStateMachine.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/RaycastController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/StateMachines/Transition.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/StateMachines/PushdownStateMachine.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/PlayerMovement.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/MovingPlatformController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/DeathComponent.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/FSM/Transition.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/HealthComponent.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/ICanDie.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/mini_clungeons.sublime-project",
		"/C/Users/Clark/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/PlayerMovementController.cs",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/Controller2D.cs.meta",
		"/D/Programming/Projects/mini_clarkway/Assets/scripts/atmel_bootloader.sublime-workspace.meta",
		"/D/Programming/Projects/personal/mini_clunge/Assets/scripts/RaycastController.cs",
		"/D/Programming/Projects/personal/mini_clunge/Assets/scripts/MovingPlatformController.cs",
		"/D/Programming/Projects/work/embedded/atmel_bootloader/src/com.c",
		"/D/Programming/Projects/work/embedded/atmel_bootloader/inc/com.h",
		"/D/Programming/Projects/work/embedded/atmel_bootloader/src/clib.c",
		"/D/Programming/Projects/work/embedded/atmel_bootloader/inc/debug.h",
		"/D/Programming/Projects/work/embedded/atmel_bootloader/inc/includes.h",
		"/D/Programming/Projects/work/embedded/atmel_bootloader/src/main.c",
		"/D/Programming/Projects/work/embedded/atmel_bootloader/makefile"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 194.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"bigfile",
			".",
			"UAH",
			"line",
			"bigfile",
			"word_count",
			"~",
			"num_words",
			"word_count",
			"sentence",
			"working_copy",
			"out_file",
			"hang",
			"HANG",
			"hang",
			"HANG",
			"hang",
			"trueVelocity.y -= this.fallGravity * Time.deltaTime;\n\t\t\t\ttrueVelocity.y = -Mathf.Min(-trueVelocity.y, this.props.fallSpeed);",
			"trueVelocity.y -= this.fallGravity * Time.deltaTime;\n\t\t\t\t\ttrueVelocity.y = -Mathf.Min(-trueVelocity.y, this.props.fallSpeed);",
			"trueVelocity.y -= this.fallGravity * Time.deltaTime;",
			"DriftMovement",
			"hang",
			"Trigers",
			"ssAirChargeSlam",
			"ssJumpSquat",
			"ssAirChargeSlam",
			"TimerState",
			"\t);",
			"PlayerWasHit",
			"AttackReceiver_Handler",
			"ssAirChargeSlam",
			"ImplementCountAttackState",
			"amountRect",
			"PlayerMovementStates",
			"PlayerController",
			"ImplementWallLeapState",
			"ImplementWallSlamState",
			"ImplementAirChargeSlameState",
			"ImplementAirChargeSlamState",
			"ImplementLightAttackState",
			"void",
			"Create",
			"CreateJumpSquatState",
			"CreateMovementStates",
			"partial",
			"CheckTrigger",
			"Incoke",
			"PreviousState",
			"localPosition",
			"Shake",
			"aspect",
			"camTransform",
			"ToString",
			"rageChannelPercentage",
			"percentDifference",
			"targetPercent",
			"percentDifference",
			"RAGE_CHANNEL",
			"States.RAGE_CHANNEL",
			"RAGE_CHANNEL",
			"states",
			"States",
			"states",
			"RAGE_CHANNELING",
			"States.RAGE_CHANNEL",
			"IDLE",
			"isMarked",
			"0",
			"18",
			"16",
			"PlayerHealth",
			"ssChannel",
			"ssRageChanneling",
			"healthPerSec",
			"currentTime",
			"rageChanneling",
			"chargeAttackInput",
			"ssChanneling",
			"CHANNELING",
			"COUNTER_ATTACK",
			"facing_right",
			"UpdateFacingRight",
			"ssJump",
			"wallLeapProperties",
			"UpdateFacingRight",
			"JUMP",
			"ssWallLeap",
			"()",
			"ssAirCharge",
			"wallSlamFrames",
			" =",
			"ssWallSlam",
			"SetVelocityX",
			"SetVelocity",
			"SetVelocityY",
			"SetVelocityX",
			"Move",
			"ssAirCharge",
			"airChargeImpulse",
			"airChargeFrames",
			"groundChargeFrames",
			"airChargeFrames",
			"aerialCharges",
			"aerialJumps",
			"aerialCharges",
			"aerialJumps",
			"ssAirCharge",
			"ssHitStun",
			"ssAirCharge",
			"rollCooldown",
			"chargeAttackInput",
			"aerialCharges",
			"\n\t\t\t",
			"\t\t});",
			"maxAerialCharge",
			"maxAerialCharges",
			"aerialCharges",
			"AerialJUmps",
			"SetAirChargePhysics",
			"ssHitStun",
			"ssGroundCharge",
			"JUMP",
			"IDLE",
			"RAGE_CHANNEL",
			"ssGroundCharge",
			"UpdateFacingRight",
			"lightAttackImpulse",
			"short"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SetPreferredY",
			"SetPreferredX",
			"_maxDescendAngle",
			"_velocity",
			"Controller2D",
			"SSES",
			"sses",
			"sses_"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": ".gitignore",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 288,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": false,
							"syntax": "Packages/zzz A File Icon zzz/aliases/Shell Script (Git).sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 76.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 150.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 132.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "cs121.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main",
				"Homework2\\Program3\\src\\main.cpp"
			],
			[
				"cmake",
				"Homework2\\Program1\\CMakeLists.txt"
			],
			[
				"controller",
				"Assets\\scripts\\Core\\Controller2D.cs"
			],
			[
				"playercon",
				"Assets\\scripts\\Game\\Player\\PlayerController.cs"
			],
			[
				"states",
				"Assets\\scripts\\Game\\Player\\PlayerController_MoveStates.cs"
			],
			[
				"attack",
				"Assets\\scripts\\Attack Library\\AttackController.cs"
			],
			[
				"air",
				"Assets\\scripts\\Game\\Player\\PlayerController_AirStates.cs"
			],
			[
				"attackstat",
				"Assets\\scripts\\Game\\Player\\PlayerController_AttackStates.cs"
			],
			[
				"attakcl",
				"Assets\\scripts\\Attack Library\\AttackLibrary.cs"
			],
			[
				"attacklibra",
				"Assets\\scripts\\Attack Library\\AttackLibrary.cs"
			],
			[
				"airs",
				"Assets\\scripts\\Game\\Player\\PlayerController_AirStates.cs"
			],
			[
				"playercontroller",
				"Assets\\scripts\\Game\\Player\\PlayerController.cs"
			],
			[
				"inputf",
				"Assets\\scripts\\Util\\InputForgiver.cs"
			],
			[
				"moves",
				"Assets\\scripts\\Game\\Player\\PlayerController_MoveStates.cs"
			],
			[
				"playermove",
				"Assets\\scripts\\Game\\Player\\PlayerMovementStates.cs"
			],
			[
				"finites",
				"Assets\\scripts\\StateMachines\\FiniteStateMachine.cs"
			],
			[
				"finite",
				"Assets\\scripts\\StateMachines\\FiniteStateMachine.cs"
			],
			[
				"screen",
				"Assets\\scripts\\Core\\ScreenShake.cs"
			],
			[
				"screensh",
				"Assets\\scripts\\Core\\ScreenShake.cs"
			],
			[
				"gaemcont",
				"Assets\\scripts\\Game\\GameController.cs"
			],
			[
				"player",
				"Assets\\scripts\\Game\\PlayerController.cs"
			],
			[
				"playerhealth",
				"Assets\\scripts\\Game\\PlayerHealth.cs"
			],
			[
				"playerhea",
				"Assets\\scripts\\Game\\PlayerHealth.cs"
			],
			[
				"playercont",
				"Assets\\scripts\\Game\\PlayerController.cs"
			],
			[
				"playermovem",
				"Assets\\scripts\\Game\\PlayerMovement.cs"
			],
			[
				"playermovement",
				"Assets\\scripts\\Game\\PlayerMovement.cs"
			],
			[
				"playercontro",
				"Assets\\scripts\\Game\\PlayerController.cs"
			],
			[
				"controller2d",
				"Assets\\scripts\\Core\\Controller2D.cs"
			],
			[
				"playercom",
				"Assets\\Sprites\\Player_Test\\Animations\\PlayerGroundCharge.anim"
			],
			[
				"movement",
				"Assets\\scripts\\Game\\PlayerMovement.cs"
			],
			[
				"controll",
				"Assets\\scripts\\Core\\Controller2D.cs"
			],
			[
				"knockback",
				"Assets\\scripts\\Game\\ReceivesKnockback.cs"
			],
			[
				"attackstr",
				"Assets\\scripts\\Attack Library\\AttackStructures.cs"
			],
			[
				"attacklibrary",
				"Assets\\Editor\\AttackLibraryWindow.cs"
			],
			[
				"window",
				"Assets\\Editor\\AttackLibraryWindow.cs"
			],
			[
				"aicon",
				"Assets\\scripts\\Game\\AIController.cs"
			],
			[
				"pl",
				"Assets\\scripts\\Game\\PlayerController.cs"
			],
			[
				"finte",
				"Assets\\scripts\\StateMachines\\FiniteStateMachine.cs"
			],
			[
				"health",
				"Assets\\scripts\\Game\\HealthComponent.cs"
			],
			[
				"ai",
				"Assets\\scripts\\Game\\AIController.cs"
			],
			[
				"attackre",
				"Assets\\scripts\\Attack Library\\AttackReceiver.cs"
			],
			[
				"playeratta",
				"Assets\\scripts\\Old\\PlayerAttack.cs"
			],
			[
				"empty",
				"Assets\\scripts\\Util\\EmptyStruct.cs"
			],
			[
				"state",
				"Assets\\scripts\\StateMachines\\State.cs"
			],
			[
				"simple",
				"Assets\\scripts\\StateMachines\\SimpleStateMachine.cs"
			],
			[
				"playercontroll",
				"Assets\\scripts\\Game\\PlayerController.cs"
			],
			[
				"input",
				"Assets\\scripts\\Util\\InputForgiver.cs"
			],
			[
				"editor",
				"Assets\\Editor\\EditorHelper.cs"
			],
			[
				"levelin",
				"Assets\\scripts\\Game\\LevelInfo.cs"
			],
			[
				"attacklib",
				"Assets\\Editor\\AttackLibraryWindow.cs"
			],
			[
				"info",
				"Assets\\scripts\\Game\\LevelInfo.cs"
			],
			[
				"leveli",
				"Assets\\Editor\\LevelInfoWindow.cs"
			],
			[
				"levelinfo",
				"Assets\\Editor\\LevelInfoWindow.cs"
			],
			[
				"attacklibrar",
				"Assets\\Editor\\AttackLibrary_Editor.cs"
			],
			[
				"wavesp",
				"Assets\\Editor\\WaveSpawnerWindow.cs"
			],
			[
				"playercontrol",
				"Assets\\scripts\\Game\\PlayerController.cs"
			],
			[
				"attackcontroller",
				"Assets\\scripts\\Attack Library\\AttackController.cs"
			],
			[
				"dont",
				"Assets\\scripts\\Util\\DontDestroyOnLoad.cs"
			],
			[
				"basic",
				"Assets\\scripts\\GUI\\BasicImageScalar.cs"
			],
			[
				"playerhealh",
				"Assets\\scripts\\Game\\PlayerHealth.cs"
			],
			[
				"",
				"Assets\\scripts\\Attack Library\\AttackReceiver.cs"
			],
			[
				"death",
				"Assets\\scripts\\Game\\DeathComponent.cs"
			],
			[
				"attackcon",
				"Assets\\scripts\\Attack Library\\AttackController.cs"
			],
			[
				"attackcontro",
				"Assets\\scripts\\Attack Library\\AttackController.cs"
			],
			[
				"raycast",
				"Assets\\scripts\\Core\\RaycastController.cs"
			],
			[
				"scrub",
				"Assets\\scripts\\ScrubMovement.cs"
			],
			[
				"attackrec",
				"Assets\\scripts\\Attack Library\\AttackReceiver.cs"
			],
			[
				"play",
				"Assets\\scripts\\PlayerController.cs"
			],
			[
				"dictionary",
				"Assets\\scripts\\Core\\SerDictionary.cs"
			],
			[
				"atta",
				"Assets\\Editor\\AttackLibraryWindow.cs"
			],
			[
				"draw",
				"Assets\\scripts\\Util\\DrawGizmoSphereOn.cs"
			],
			[
				"atttacklib",
				"Assets\\scripts\\Attack Library\\AttackLibrary.cs"
			],
			[
				"attackli",
				"Assets\\scripts\\Attack Library\\AttackLibrary.cs"
			],
			[
				"ser",
				"Assets\\scripts\\Core\\SerDictionary.cs"
			],
			[
				"edito",
				"Assets\\Editor\\EditorHelper.cs"
			],
			[
				"attakc",
				"Assets\\scripts\\Attack Library\\AttackLibrary.cs"
			],
			[
				"attac",
				"Assets\\Editor\\AttackLibraryWindow.cs"
			],
			[
				"serdictionary",
				"Assets\\scripts\\Core\\SerDictionary.cs"
			],
			[
				"contro",
				"Assets\\Editor\\Controller2D_Editor.cs"
			],
			[
				"edit",
				"Assets\\Sprites\\EditorTestSer.cs"
			],
			[
				"test",
				"Assets\\Editor\\TestWindow_Editor.cs"
			],
			[
				".git",
				".gitignore"
			],
			[
				"ray",
				"RaycastController.cs"
			],
			[
				"sta",
				"StateMachines\\State.cs"
			],
			[
				"push",
				"StateMachines\\PushdownStateMachine.cs"
			],
			[
				"con",
				"Controller2D.cs"
			],
			[
				"heal",
				"HealthComponent.cs"
			],
			[
				"healthcomponent",
				"HealthComponent.cs"
			],
			[
				"ic",
				"ICanDie.cs"
			],
			[
				"moving",
				"MovingPlatformController.cs"
			],
			[
				"ra",
				"RaycastController.cs"
			],
			[
				"movin",
				"MovingPlatformController.cs"
			],
			[
				"contr",
				"Controller2D.cs"
			],
			[
				"layer",
				"PlayerMovementController.cs"
			],
			[
				"control",
				"Controller2D.cs"
			],
			[
				"com",
				"Controller2D.cs.meta"
			],
			[
				"rayca",
				"RaycastController.cs"
			],
			[
				"cont",
				"Controller2D.cs"
			],
			[
				"git",
				".gitignore"
			],
			[
				"uart",
				"src\\uart.c"
			],
			[
				"debug",
				"inc\\debug.h"
			],
			[
				"make",
				"makefile"
			],
			[
				"include",
				"inc\\includes.h"
			],
			[
				"incldue",
				"inc\\includes.h"
			],
			[
				"bin",
				"Sam_Test.bin"
			],
			[
				"clib",
				"src\\clib.c"
			],
			[
				"hex",
				"Sam_Test.hex"
			],
			[
				"lss",
				"Sam_Test.lss"
			],
			[
				"vec",
				"src\\device\\boot_vectors.c"
			],
			[
				"boot_vec",
				"src\\device\\boot_vectors.c"
			],
			[
				"boot",
				"inc\\device\\boot_vectors.h"
			],
			[
				"vector",
				"src\\device\\boot_vectors.c"
			],
			[
				"util",
				"inc\\util.h"
			],
			[
				"pm",
				"inc\\device\\component\\component_pm.h"
			],
			[
				"mke",
				"makefile"
			],
			[
				"compon",
				"inc\\device\\component\\component_scif.h"
			],
			[
				"ld",
				"boot_link.ld"
			],
			[
				"sam",
				"Sam_Test.elf"
			],
			[
				"sses",
				"src\\sses.h"
			],
			[
				"http",
				"src\\httpd.h"
			],
			[
				"includes",
				"src\\includes.h"
			],
			[
				"otimer",
				"src\\otimer.c"
			],
			[
				"icnlude",
				"src\\includes.h"
			],
			[
				"timer",
				"src\\timer.c"
			],
			[
				"cloud",
				"src\\cloud.h"
			],
			[
				"admin",
				"website_files\\includes\\admin.js"
			],
			[
				"lpc",
				"lpc1768_flash.ld"
			],
			[
				"web",
				"src\\websocket.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\Clark\\AppData\\Roaming\\Sublime Text 3\\Packages\\User\\mini_clungeons.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 354.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"CollisionInfo"
			]
		],
		"width": 374.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 232.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
